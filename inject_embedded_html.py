import sys
import zipfile
import shutil
import os
import posixpath


html_escape_table = {
    "&": "&amp;",
    '"': "&quot;",
    "'": "&apos;",
    ">": "&gt;",
    "<": "&lt;",
    "\n": " ",
    }

def html_escape(text):
    """Produce entities within text."""
    return "".join(html_escape_table.get(c,c) for c in text)

def zipdir(folder, zip_path, z):
	for child in os.listdir(folder):
		child_path = os.path.join(folder, child)
		child_zip_path = posixpath.join(zip_path, child) if zip_path else child

		if os.path.isdir(child_path):
			zipdir(child_path, child_zip_path, z)
		else:
			z.write(child_path, arcname=child_zip_path)


def main():
	try:
		docx_file, html_file, output_docx = sys.argv[1:]
	except:
		print "Usage: %s <docx> <html> <output_docx>".format(sys.argv[0])
		return -1

	with open(html_file, "r") as f:
		html = f.read()

	with zipfile.ZipFile(docx_file, "r") as z:
		z.extractall("temp_zip")

	with open(os.path.join("temp_zip", "word", "document.xml"), "rb") as f:
		d = f.read()

	i = d.find("embeddedHtml")
	open_quote = d.find('"', i + 1)
	close_quote = d.find('"', open_quote + 1)
	new_document = d[:open_quote + 1] + html_escape(html) + d[close_quote:]
	with open(os.path.join("temp_zip", "word", "document.xml"), "wb") as f:
		f.write(new_document)

	with zipfile.ZipFile(output_docx, "w") as z:
		zipdir("temp_zip", "", z)

	shutil.rmtree("temp_zip")


if "__main__" == __name__:
	main()
